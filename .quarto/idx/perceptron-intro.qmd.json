{"title":"Perceptron","markdown":{"headingText":"Perceptron","containsRefs":false,"markdown":"---\n\nDL은 **인공신경망(ANN, Articial Neural Network)**이 여러개(Deep)의 층(Layers)로 존재하는 구조를 말하는 것입니다.\n\n여기서 주목할 것은 신경망 입니다. 인공 신경망은 생물학적 신경망을 모방하여 설계된 만큼 이에 대한 작동기전을 이해하는 것이 중요하다고 생각합니다.\n\n본 장에서는 생물학적 신경망의 가장 기초가되는 **뉴런(Neuron)**에 대한 이해를 기반으로 인공 신경망의 가장 기초가되는 **퍼셉트론(Perceptron)**에 대하여 이해해 보고자 합니다.\n\n\n## What is a 'Perceptron'?\n\n퍼셉트론은 인공신경망의 가장 기초가 되는 개념이고 이를 이해하기 위하여 생물학적 신경망의 가장 기초가 되는 뉴런(@fig-neuron)에 대하여 이해할 필요가 있습니다. \n\n뉴런의 구조는 다양하게 하지만 우리가 집중하고자 하는 곳은 크게 3가지 부분으로 구성되어 있습니다. \n\n-   외부 자극등 정보를 수신하는 **수상돌기(Dendrite)**\n-   수신된 정보를 신호를 만들어 내는 **핵(Nucleus)**\n-   신호를 신경절달 물질로 만들어 내는 **축삭돌기(Axon)+시넵스(Synapse)**\n\n여기서 주목할 것은 뉴런은 정보를 입력받아 내부적인 신호를 생성하여 다음 뉴런에 정보를 전달한 다는 것입니다. \n\n![Structure of Neuron (source: Wikipedia)](image/neuron.png){#fig-neuron}\n\n이러한 뉴런의 작동기전을 모방하여 만들어진 것이 퍼셉트론(@fig-perceptron1)입니다. \n\n퍼셉트론은 1957년 프랑크 로젠블라트가 제안한 것으로 퍼셉트론은 이러한 뉴런의 작동기전을 모방하여 정보를 입력(Input)받아 연산을 통해 출력(Output)을 생성하도록 설계되었습니다. \n\n이러한 정보의 흐름 또는 연산 절차를 다른 말로 **Forward Propagation**이라 합니다, 향후 논의 될 **Back Propagation**과 대비되는(?) 개념입니다.\n\n```{mermaid}\n%%| label: fig-perceptron1\n%%| fig-cap: \"Basic of Perceptron\"\n\nflowchart LR\n  subgraph node\n    direction LR\n    node2_1((SUM)) --> node2_2((STEP))\n  end\n  node1_1((x_1)) --w1--> node2_1\n  node1_2((x_2)) --w2--> node2_1\n  node2_2 --> node3((y_hat))\n```\n\n@fig-perceptron1 에서 원은 **노드(Node)**라고 하면 노드간 연결된 선을 **엣지(Edge)**라고 합니다. 엣지상에 존재하는 `w`는 **가중치(Weight)**하고 합니다.\n\n첫번째 노드의 `x_1`과 `x_2`는 입력값을 말하고, 두번째 노드는 내부적으로 `SUM`과 `STEP`으로 구성된 활성함수를 말하며, 마지막 노드의 `z`는 출력값으로 노드의 활성 정도를 말합니다.\n\n노란색 노드에서는 2단계 계산이 발생합니다. 하나늗 입력값의 뉴런에서는 신호의 세기를 계산하는 **Weighted Sum**(@eq-weightedSum) 과 뉴런의 여부를 계산하는 **Step Function**(@eq-stepFunction) 으로 구성되어 있습니다.\n\n결과적으로 퍼셉트론의 출력값($\\hat{y}=h_{w,b}(x)=sign(\\textbf{w}^{T}\\textbf{x}+b)$)은 (-1, 0, 1)로 3가지를 갖게 됩니다. 이 결과값을 실제의 값($y$)와 비교(Loss Function)하여 가중치($w$)를 업데이트 하여 최적해가 아닌 단순 solution(?)을 찾는 것이 퍼셉트론입니다.\n\n$$\nz = b + w_{1}x_{1} + w_{2}x_{2} + \\cdots + w_{n}x_{n} = b + \\textbf{w}^{T} \\textbf{x}\n$$ {#eq-weightedSum}\n\n$$\nstep(z) = sign(z) = \\begin{cases}\n-1 & z < 0 \\\\\n0 & z = 0 \\\\\n1 & z > 0\n\\end{cases}\n$$ {#eq-stepFunction}\n\n\n::: {.callout-note}\n## 퍼셉트론에서 사용되는 계단함수\n일반적으로 **Sign function**을 가장 많이 사용하지만, 이진값(0, 1)만을 갖는 **Heavisde step function**이 사용되기도 합니다. Clsiffication 문제에서 직선상의 Observation값은 0 , Weight와 같은 방향은 1, 다른 방향은 -1로 처리하는 것이 보다 용이하기에 우리는 **Sign function**을 주로 사용합니다.\n\n$$\nheavisde(z) = \\begin{cases}\n0 & z < 0 \\\\\n1 & z >= 0\n\\end{cases}\n$$\n:::\n\n## Bit-wise operator(단순 논리 회로)\n\n앞서 보았던 퍼셉트론을 **분류(Classification)**을 수행해보며 보다 자세하게 살펴보겠습니다. 특히 분류의 문제는 향후 ANN 및 CNN 등 다양한 문제를 해결하는데 사용되는 기법으로 향후 학습을 진행하면서 병렬적으로 작동기전에 대하여 비교하기가 용이할 것으로 생각됩니다.\n\n분류문제 중 가장 간단한 예시로 Bit-wise operator(단순 논리 회로)에 대한 내용을 살펴보겠습니다. 논리회로는 `0`과 `1`로 구분된 2개의 `input`을 받아 `0`또는 `1`을 `output`으로 출력하는 회로입니다.\n\n단순 논리 회로는 `AND`, `NAND`, `OR` 그리고 `XOR`게이트로 구성되어 있으며 입력에 따른 출력이 다음의 **진리표(@tbl-bitwise )**로 나타낼 수 있습니다.\n\n::: {#tbl-bitwise layout-ncol=4}\n| $x_1$ | $x_2$ | $y$ |\n| :---: | :---: | :---: |\n| 0 | 0 | 0 |\n| 1 | 0 | 0 |\n| 0 | 1 | 0 |\n| 1 | 1 | 1 |\n\n: AND gate {#tbl-AND}\n\n| $x_1$ | $x_2$ | $y$ |\n| :---: | :---: | :---: |\n| 0 | 0 | 1 |\n| 1 | 0 | 0 |\n| 0 | 1 | 0 |\n| 1 | 1 | 0 |\n\n: NAND gate {#tbl-NAND}\n\n| $x_1$ | $x_2$ | $y$ |\n| :---: | :---: | :---: |\n| 0 | 0 | 0 |\n| 1 | 0 | 1 |\n| 0 | 1 | 1 |\n| 1 | 1 | 1 |\n\n: OR gate {#tbl-OR}\n\n| $x_1$ | $x_2$ | $y$ |\n| :---: | :---: | :---: |\n| 0 | 0 | 0 |\n| 1 | 0 | 1 |\n| 0 | 1 | 1 |\n| 1 | 1 | 0 |\n\n: XOR gate {#tbl-XOR}\n\n게이트별 진리표\n:::\n\n## Perceptron 으로 구현\n\n위의 **진리표(@tbl-bitwise )**의 내용을 퍼셉트론으로 구현해보겠습니다. 이를 위해 `AND`게이트를 예를 들도록 하겠습니다.\n\n`AND`게이트는 `x_1` 과 `x_2`가 모두 1인 경우 `y`를 1로 출력하는 논리 회로 입니다. 이를 퍼셉트론으로 표현하면 `w_1`, `w_2`, `\\theta`로 표현할 수 있고 이러한 선형판별식(@eq-eqAndGate) 식은 아래와 같습니다.\n\n::: {.column-margin}\n$$\ny = \\begin{cases}\n0 & w_1*x_1 + w_2*x_2 \\leq \\theta \\\\\n1 & w_1*x_1 + w_2*x_2 > \\theta  \n\\end{cases}\n$$ {#eq-eqAndGate}\n:::\n\n위의 선형판별식은 아래와 같이 그림으로 표현이 가능합니다. 다만, 가중치 $w$ 와 임계치 $\\theta$ 의 조합은 무수히 많이 존재함을 유의해야 합니다.((@fig-egAndGate ) 의 적색선은 임의로 표현한 직선이고 이 직선이 무수히 많다는 의미)\n\n``` {python}\n#| echo: false\n#| label: fig-egAndGate\n#| fig-cap: AND gate\nimport matplotlib.pyplot as plt\nimport numpy as np\nx = [0,1,0]\ny = [0,0,1]\nx_1 = [1]\ny_1 = [1]\nx_p = [-1, 0, 1, 2]\ny_p = [2.5, 1.5, 0.5, -0.5]\n\nplt.figure(figsize=(6,4))\nplt.plot(x, y, 'o')\nplt.plot(x_1, y_1, 'o')\nplt.plot(x_p, y_p, 'r')\nplt.xlim([-1,2])\nplt.ylim([-1,2])\n```\n\n단순 논리 회로(`XOR`게이트 제외)의 선형판별식을 코드로 구현하면 다음과 같습니다. 여기서 일반적으로 향후 Deeplearning의 표현방법을 따라 임계치인 $\\theta$ 를 편향(bias)인 $-b$로 치환한 수식을 사용하겠습니다.\n\n::: {.column-margin}\n$$\ny = \\begin{cases}\n0 & b + w_1*x_1 + w_2*x_2 \\leq 0 \\\\\n1 & b + w_1*x_1 + w_2*x_2 > 0 \n\\end{cases}\n$$ {#eq-eqAndGate2}\n:::\n\n변형된 수식(@eq-eqAndGate2 )에 기초하여 진리표(@tbl-bitwise )상의 게이트를 코드로 구현하면 아래와 같습니다.\n\n``` {python}\nimport numpy as np # <1>\n\n# AND gate\ndef AND(x1, x2):\n  x = np.array([x1, x2])\n  w = np.array([0.5, 0.5]) # <2>\n  b = -0.7 # <2>\n  tmp = np.sum(w*x) + b # <3>\n  if tmp <= 0:\n    return 0\n  elif tmp > 0:\n    return 1\n\n# NAND gate\ndef NAND(x1, x2):\n  x = np.array([x1, x2])\n  w = np.array([-0.5, -0.5]) # <2>\n  b = 0.7 # <2>\n  tmp = np.sum(w*x) + b \n  if tmp <= 0:\n    return 0\n  elif tmp > 0:\n    return 1\n\n# OR gate\ndef OR(x1, x2):\n  x = np.array([x1, x2])\n  w = np.array([0.5, 0.5]) # <2>\n  b = -0.7 # <2>\n  tmp = np.sum(w*x) + b \n  if tmp <= 0:\n    return 0\n  elif tmp > 0:\n    return 1\n```\n1. Vector 연산의 최적화를 위하여 `numpy`를 기본적으로 사용한다.\n2. `w`와 `b`는 임의로 할당한다. 다만, `NAND` 및 `OR` 는 `AND`의 부호와 다름에 주의하자.\n3. **weighted sum**은 가중치를 곱하여 더한 값으로 **내적**과 유사함을 유의하자.\n\n## 다층 퍼셉트론\n\n다중 퍼셉트론은 퍼셉트론이 여러층으로 구현된 형태를 말합니다. 층을 여러개 쌓아서 보다 복잡한 문제를 해결할 수 있고, 추후 Deeplearning에서 여러층의 신경망을 쌓는 방식의 기초라고만 이해해 두겠습니다.\n\n앞서 1층 퍼셉트론으로는 *단순 논리 회로* 중 선형적인 게이트만을 구현할 수 있었습니다. 그렇다면 `XOR`게이트는 해결할 수 없을까요? 이를 해결하기 위한 것이 다층 퍼셉트론 입니다.\n\n가령 `XOR`게이트 문제를 `NAND`와 `OR`게이트를 조합한 출력값을 `AND`게이트의 입력값으로 받게 된다면 `XOR`게이트를 구현할 수 있습니다. 국소적인 문제해결을 결합하여 전체 문제를 해결하는 방식으로 이해됩니다.\n\n``` {mermaid}\n%%| label: fig-xorGate\n%%| fig-cap: \"XOR Gate: Composition of NAND, OR, AND\"\n\nflowchart LR\n  x1((x1)) & x2((x2)) ---> nand[NAND] & or[OR] \n  nand --s1---> AND ---> y[y]\n  or --s2---> AND\n```\n\n`XOR`의 게이트를 다른 게이트의 조합을 활용한 진리표는 아래와 같습니다. 위의 그림에서 보듯이 `x1`과 `x2`의 입력값을 받아 `NAND`게이트는 `s1`의 출력값을 `OR`게이트는 `s2`의 출력값을 생성하며, 다시 `s1`과 `s2`를 입력값으로 받아 `AND`를 통과시켜 최종적으로 `XOR`게이트의 진리표를 다시 그릴 수 있습니다.\n\n::: {#tbl-XOR2}\n\n| $x_1$ | $x_2$ | $s_1$ | $s_2$ | $y$ |\n| :---: | :---: | :---: | :---: | :---: |\n| 0 | 0 | 1 | 0 | 0 |\n| 1 | 0 | 1 | 1 | 1 |\n| 0 | 1 | 1 | 1 | 1 |\n| 1 | 1 | 0 | 1 | 0 |\n\n`XOR`게이트의 진리표\n:::\n\n위의 진리표(@tbl-XOR2 )를 코드로 구현하면 아래와 같습니다. 앞서 구현한 게이트들을 코드내에서 사용하여 단순하게 구현할 수 있습니다.\n\n``` {python}\ndef XOR(x1, x2):\n  s1 = NAND(x1, x2)\n  s2 = OR(x1, x2)\n  y = AND(s1, s2)\n  return y\n```","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","html-math-method":"katex","output-file":"perceptron-intro.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.551","bibliography":["references.bib"],"theme":"cosmo","mermaid":{"theme":"default"},"math":{"engine":"mathjax"},"code-annotations":"hover","fig-cap-location":"bottom","tbl-cap-location":"bottom"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}